<?xml version="1.0" encoding="UTF-8"?>
<!-- <beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName"> default-lazy-init="true -->
<beans default-autowire="byName" default-lazy-init="true"
xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"  
xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jms="http://www.springframework.org/schema/jms"  
xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"  
xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:p="http://www.springframework.org/schema/p"  
xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"  
xmlns:util="http://www.springframework.org/schema/util"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd  
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd  
http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd  
http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd  
http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.1.xsd  
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd  
http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd  
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd  
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd"> 

	<bean id="dataSourceB2b" class="com.atomikos.jdbc.AtomikosDataSourceBean" destroy-method="close">
		<property name="uniqueResourceName" value="dataSourceB2b"/>
		<property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/> 
		<property name="xaProperties">
			<props>
				<prop key="url">${jdbc.url.b2b}</prop>
				<prop key="user">${jdbc.username.b2b}</prop>
				<prop key="password">${jdbc.password.b2b}</prop>
				<prop key="pinGlobalTxToPhysicalConnection">true</prop>
            	<prop key="autoReconnect">true</prop>
			</props>
		</property>
		<property name="testQuery" value="select 1" />
		<property name="borrowConnectionTimeout" value="10" />
		<property name="maxPoolSize" value="50" />
		<property name="minPoolSize" value="3" />
		<property name="maintenanceInterval" value="30" /> 
		<property name="reapTimeout" value="20000" />
	</bean>
	<bean id="sessionFactoryB2b" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceB2b" />
		<property name="configLocations">
			<list>
				<value>classpath*:hibernate/**/hibernate.b2b.cfg.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
				<prop key="hibernate.transaction.factory_class">${hibernate.transaction.factory_class}</prop>
				<prop key="hibernate.transaction.manager_lookup_class">${hibernate.transaction.manager_lookup_class}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.ehcache_config_file}</prop>
			</props>
		</property>
	</bean>
	
	<!-- <bean id="dataSourceOrder" class="com.atomikos.jdbc.AtomikosDataSourceBean" destroy-method="close">
		<property name="uniqueResourceName" value="dataSourceOrder"/>
		<property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/> 
		<property name="xaProperties">
			<props>
				<prop key="url">${jdbc.url.order}</prop>
				<prop key="user">${jdbc.username.order}</prop>
				<prop key="password">${jdbc.password.order}</prop>
				<prop key="pinGlobalTxToPhysicalConnection">true</prop>
            	<prop key="autoReconnect">true</prop>
			</props>
		</property>
		<property name="testQuery" value="select 1" />
		<property name="borrowConnectionTimeout" value="10" />
		<property name="maxPoolSize" value="50" />
		<property name="minPoolSize" value="3" />
		<property name="maintenanceInterval" value="30" /> 
		<property name="reapTimeout" value="20000" />
	</bean> -->
	
	
	<!-- <bean id="sessionFactoryOrder" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceOrder" />
		<property name="configLocations">
			<list>
				<value>classpath*:hibernate/**/hibernate.order.cfg.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
				<prop key="hibernate.transaction.factory_class">${hibernate.transaction.factory_class}</prop>
				<prop key="hibernate.transaction.manager_lookup_class">${hibernate.transaction.manager_lookup_class}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.ehcache_config_file}</prop>
			</props>
		</property>
	</bean> -->


	<bean id="atomikosTransactionManager"  class="com.atomikos.icatch.jta.UserTransactionManager"
	init-method="init" destroy-method="close">
		<property name="forceShutdown" value="true"/>
	</bean>
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" > 
		<property name="transactionTimeout" value="300"/>
	</bean>
	<bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"> 
		<property name="transactionManager" ref="atomikosTransactionManager"/> 
		<property name="userTransaction" ref="atomikosUserTransaction"/>
		<property name="allowCustomIsolationLevels" value="true"/>
	</bean>
	
	<!-- 基本事务定义,使用transactionManager作事务管理--> 
	<tx:advice id="txAdvice" transaction-manager="springTransactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" propagation="REQUIRED" />
			<tx:method name="query*" read-only="true" propagation="REQUIRED" />
			<tx:method name="decide*" read-only="true" propagation="REQUIRED" />
			<tx:method name="stat*" read-only="true" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Throwable.class"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Throwable.class"/>
			<tx:method name="alter*" propagation="REQUIRED" rollback-for="Throwable.class"/>
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="Throwable.class"/>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Throwable.class"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Throwable.class"/>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Throwable.class"/>
			<tx:method name="set*" propagation="REQUIRED" rollback-for="Throwable.class"/>
			<tx:method name="*Oper" propagation="REQUIRED" rollback-for="Throwable.class"/>
			<tx:method name="*filter" propagation="REQUIRED" rollback-for="Throwable.class"/>
			<tx:method name="*" read-only="true" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 以AspectJ方式 定义 AOP -->
	<aop:config>
	 	<aop:pointcut id="serviceImp" expression="(execution(* xyz.svc.*.imp.*SvcImp.*(..)))"/>
	 	<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceImp"/>
	</aop:config>
	
</beans>
