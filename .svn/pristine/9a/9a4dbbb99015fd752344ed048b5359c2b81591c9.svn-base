package xyz.svc.main.imp;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.hibernate.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import xyz.dao.CommonDao;
import xyz.filter.ReturnUtil;
import xyz.model.main.ProductHotel;
import xyz.svc.main.ProductHotelSvc;
import xyz.util.StringTool;
import xyz.util.UUIDUtil;

@Service
public class ProductHotelSvcImp implements ProductHotelSvc {

	@Autowired
	CommonDao commonDao;
	
	@Override
	public Map<String, Object> queryProductHotelList(String nameCn, 
			int offset,
			int pagesize) {
		String hql=" from ProductHotel where 1=1 ";
		if(!"".equals(nameCn)&&nameCn!=null){
			hql+=" and nameCn like '%"+nameCn+"%'";
		}
		
		String countHql = "select count(numberCode) "+hql;
		Query countQuery = commonDao.getQuery(countHql);
		Number countTemp = (Number)countQuery.uniqueResult();
		int count = countTemp==null?0:countTemp.intValue();
		
		Query query = commonDao.getQuery(hql);
		query.setMaxResults(pagesize);
		query.setFirstResult(offset);
		@SuppressWarnings("unchecked")
		List<ProductHotel> productHotelList=query.list();
		Map<String,Object> mapContent=new HashMap<String, Object>();
		mapContent.put("total", count);
		mapContent.put("rows",productHotelList);
		return ReturnUtil.returnMap(1, mapContent);
	}

	@Override
	public Map<String, Object> addProductHotel(String nameCn, String provider) {
		ProductHotel productscenic =new ProductHotel();
		productscenic.setNameCn(nameCn);
		productscenic.setNumberCode(UUIDUtil.getUUIDStringFor32());
		productscenic.setProvider(provider);
		commonDao.save(productscenic);
		return ReturnUtil.returnMap(1, productscenic);
	}

	@Override
	public Map<String, Object> editProductHotel(String numberCode,
			String nameCn, String provider) {
		ProductHotel productscenic=(ProductHotel)commonDao.getObjectByUniqueCode("ProductHotel", "numberCode", numberCode);
		productscenic.setNameCn(nameCn);
		productscenic.setProvider(provider);
		commonDao.update(productscenic);
		return ReturnUtil.returnMap(1, null);
	}

	@Override
	public Map<String, Object> deleteProductHotel(String numberCodes) {
		if(!"".equals(numberCodes)&&numberCodes!=null){
			String sql = "delete from product_scenic where number_code in ("+StringTool.StrToSqlString(numberCodes)+")";
			commonDao.getSqlQuery(sql).executeUpdate();
			return ReturnUtil.returnMap(1, null);
		}else{
			return ReturnUtil.returnMap(0, "请先选中需要删除的对象！");
		}
	}
}
